version: 2.1

executors:
  default:
    docker:
    - image: circleci/openjdk:8-jdk
    working_directory: ~/caver-java-ext-kas

commands:
  notify-success:
    steps:
      - run:
          name: "notify slack when job success"
          command : |
            curl --data '{"text": "✅ Job *'$CIRCLE_JOB'* succeeded on *'$CIRCLE_BRANCH''$CIRCLE_TAG'*. Please see '$CIRCLE_BUILD_URL' for details."}' "$SLACK_WEBHOOK_URL"
          when: on_success
  notify-failure:
    steps:
      - run:
          name: "notify slack when job fail"
          command : |
            curl --data '{"text": "❌ Job *'$CIRCLE_JOB'* failed on *'$CIRCLE_BRANCH''$CIRCLE_TAG'*. Please see '$CIRCLE_BUILD_URL' for details."}' "$SLACK_WEBHOOK_URL"
          when: on_fail
  check_rc:
    steps:
      - run:
          name: Check RC
          command: |
            if [[ -n $CIRCLE_TAG ]]; then
              sed -i "s/version '.*'/version '${CIRCLE_TAG:1}'/" build.gradle
              sed -n '/version/p' build.gradle
            else
              echo "Not RC version"
            fi
jobs:
  unit_test:
    executor: default
    steps:
      - checkout
      - run: |
          ./gradlew clean
          ./gradlew test --debug

  build:
    executor: default
    steps:
      - checkout
      - check_rc
      - run: ./gradlew build -x test --debug
      - persist_to_workspace:
          root: ~/caver-java-ext-kas
          paths:
            - build/*
      - store_artifacts:
          path: ./build

  build_android:
    executor: default
    steps:
      - checkout
      - check_rc
      - run:
          name: "Change to Android version"
          command: |
            VERSION=$(awk '/version '\''/ {gsub("'\''",""); print $2}' build.gradle)
            sed -i "s/version '.*'/version '${VERSION}-android'/" build.gradle
      - run: ./gradlew build -x test --debug

  tag_verify:
    executor: default
    steps:
      - checkout
      - run:
          name: "Verify tag and file verison match"
          command: ./.circleci/scripts/tag_verify.sh

  publish:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: ~/caver-java-ext-kas
      - check_rc
      - run:
          name: "publish"
          command: |
              ./gradlew bintrayUpload --stacktrace --debug
      - notify-failure
      - notify-success

  publish_android:
    executor: default
    steps:
      - checkout
      - check_rc
      - run:
          name: "build and publish for android"
          command: | ## Cannot attach workspace since build and android build create files on same build directory so that it will conflict if use attach_workspace. 
              ./gradlew build -x test  --debug
              ./gradlew bintrayUpload --stacktrace --debug
      - notify-failure
      - notify-success

  release_PR:
    executor: default
    steps:
      - add_ssh_keys 
      - checkout
      - run:
          name: "Push release branch"
          command: |
              set -x
              echo "push to release branch: /release/${CIRCLE_TAG%-*}"
              git checkout -b release/${CIRCLE_TAG%-*}
              git push origin release/${CIRCLE_TAG%-*}
      - run:
          name: "Make PR to master branch"
          command: ./.circleci/scripts/release_pr.sh

  tagging:
    executor: default
    steps:
      - add_ssh_keys
      - checkout
      - run:
          name: "Tagging and delete release branch"
          command: ./.circleci/scripts/release_tag_branch.sh

stage_defaults:
  default: &stage_default
    filters:
      tags:
        only:
          - /^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.*/
      branches:
        ignore: 
          - /release\/.*/
  rc: &stage_rc
    context: sdk_java_prod
    filters:
      tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.*/
      branches:
        ignore: /.*/
  prod: &stage_prod
    context: sdk_java_prod
    filters:
      branches:
        only: master
  tests: &test_steps
    requires:
      # - unit_test
      - tag_verify
      - build
      - build_android

workflows:
  version: 2
  build_and_test:
    jobs:
      # - unit_test:
      #     <<: *stage_default
      - build:
          <<: *stage_default
      - build_android:
          <<: *stage_default

      # publish jobs - rc
      - tag_verify:
          <<: *stage_rc
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.*/
            branches:
              ignore: /.*/
      - publish:
          <<: *stage_rc
          <<: *test_steps
          name: publish_rc
      - publish_android:
          <<: *stage_rc
          <<: *test_steps
          name: publish_android_rc
      - release_PR:
          <<: *stage_rc
          requires:
            - publish_rc
            - publish_android_rc

      # publish jobs - prod
      - publish:
          <<: *stage_prod
          name: publish_prod
      - publish_android:
          <<: *stage_prod
          name: publish_android_prod
      - tagging:
          requires:
            - publish_prod
