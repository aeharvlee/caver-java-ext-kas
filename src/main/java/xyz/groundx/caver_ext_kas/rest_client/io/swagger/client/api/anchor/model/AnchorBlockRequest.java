/*
 * Anchor API
 * # Introduction This document discusses Klaytn API Service (KAS) Anchor API. Anchor API features functions for sending metadata to prove data reliability and ensuring the reliability of service chain data to the Klaytn main chain.     # Error Codes  ## 400: Bad Request   | Code | Messages |   | --- | --- |   | 1071010 | data don't exist 1071615 | its value is out of range; size 1072100 | same payload ID or payload was already anchored 1072101 | all configured accounts have insufficient funds |   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xyz.groundx.caver_ext_kas.rest_client.io.swagger.client.api.anchor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import xyz.groundx.caver_ext_kas.rest_client.io.swagger.client.api.anchor.model.AnchorBlockPayload;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Anchor block request schema
 */
@Schema(description = "Anchor block request schema")

public class AnchorBlockRequest {
  @SerializedName("operator")
  private String operator = null;

  @SerializedName("payload")
  private AnchorBlockPayload payload = null;

  public AnchorBlockRequest operator(String operator) {
    this.operator = operator;
    return this;
  }

   /**
   * Operator account address
   * @return operator
  **/
  @Schema(example = "0x426Cd8fF0672225c7e96E0bD2f9175B05790653d", required = true, description = "Operator account address")
  public String getOperator() {
    return operator;
  }

  public void setOperator(String operator) {
    this.operator = operator;
  }

  public AnchorBlockRequest payload(AnchorBlockPayload payload) {
    this.payload = payload;
    return this;
  }

   /**
   * Get payload
   * @return payload
  **/
  @Schema(required = true, description = "")
  public AnchorBlockPayload getPayload() {
    return payload;
  }

  public void setPayload(AnchorBlockPayload payload) {
    this.payload = payload;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnchorBlockRequest anchorBlockRequest = (AnchorBlockRequest) o;
    return Objects.equals(this.operator, anchorBlockRequest.operator) &&
        Objects.equals(this.payload, anchorBlockRequest.payload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operator, payload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnchorBlockRequest {\n");
    
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
