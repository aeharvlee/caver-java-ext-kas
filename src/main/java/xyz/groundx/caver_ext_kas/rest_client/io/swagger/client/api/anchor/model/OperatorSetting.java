/*
 * Anchor API
 * # Introduction This document discusses Klaytn API Service (KAS) Anchor API. Anchor API features functions for sending metadata to prove data reliability and ensuring the reliability of service chain data to the Klaytn main chain.     # Error Codes  ## 400: Bad Request   | Code | Messages |   | --- | --- |   | 1071010 | data don't exist 1071615 | its value is out of range; size 1072100 | same payload ID or payload was already anchored 1072101 | all configured accounts have insufficient funds |   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xyz.groundx.caver_ext_kas.rest_client.io.swagger.client.api.anchor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Operator payment information
 */
@Schema(description = "Operator payment information")

public class OperatorSetting {
  @SerializedName("useGlobalFeePayer")
  private Boolean useGlobalFeePayer = null;

  @SerializedName("useOperator")
  private Boolean useOperator = null;

  public OperatorSetting useGlobalFeePayer(Boolean useGlobalFeePayer) {
    this.useGlobalFeePayer = useGlobalFeePayer;
    return this;
  }

   /**
   * Global fee delegation account enabled/disabled
   * @return useGlobalFeePayer
  **/
  @Schema(example = "true", required = true, description = "Global fee delegation account enabled/disabled")
  public Boolean isUseGlobalFeePayer() {
    return useGlobalFeePayer;
  }

  public void setUseGlobalFeePayer(Boolean useGlobalFeePayer) {
    this.useGlobalFeePayer = useGlobalFeePayer;
  }

  public OperatorSetting useOperator(Boolean useOperator) {
    this.useOperator = useOperator;
    return this;
  }

   /**
   * Operator payment enabled/disabled
   * @return useOperator
  **/
  @Schema(example = "true", required = true, description = "Operator payment enabled/disabled")
  public Boolean isUseOperator() {
    return useOperator;
  }

  public void setUseOperator(Boolean useOperator) {
    this.useOperator = useOperator;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OperatorSetting operatorSetting = (OperatorSetting) o;
    return Objects.equals(this.useGlobalFeePayer, operatorSetting.useGlobalFeePayer) &&
        Objects.equals(this.useOperator, operatorSetting.useOperator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(useGlobalFeePayer, useOperator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OperatorSetting {\n");
    
    sb.append("    useGlobalFeePayer: ").append(toIndentedString(useGlobalFeePayer)).append("\n");
    sb.append("    useOperator: ").append(toIndentedString(useOperator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
